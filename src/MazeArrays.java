//Class MazeArrays, C211 Group Project Spring 2023
//Author: Rhett Godwin

//********Maze Arrays FINAL BUILD*********
//provides arrays in the proper format   *
//for the MazeSolver and MazeSolverGUI   *
//****************************************



import java.util.*;

import javax.swing.JOptionPane;
public class MazeArrays {

    //initalize variable
  int number =0;
  //random number gen. 
    Random rand = new Random();
 
    //array 1
    char[][] mazeArray1 = {
          {4,1,1,1,1,1,1,1},
          {0,0,0,1,1,1,1,1},
          {1,1,0,1,1,1,1,1},
          {1,1,0,0,0,0,1,1},
          {1,1,1,1,1,0,1,1},
          {1,1,1,1,1,0,1,1},
          {1,1,1,1,1,0,1,1},
          {1,1,1,1,1,0,0,2}, 
          {1,1,1,1,1,1,1,1} };
 //array2
char[][] mazeArray2 = {
        {4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1},
        {1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,0,1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,0,1,1,1,0,0,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,0,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,0,0,0,0,0,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,2},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1} };

//array2
char[][] mazeArray3 = {
        {4,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,0,1,1,1,1,0,0,0,0,1,1,1,1,1,1},
        {1,0,1,1,1,1,0,1,1,1,1,1,1,1,1,1},
        {1,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1},
        {1,0,1,1,0,1,1,1,1,1,1,1,1,1,1,1},
        {1,0,0,1,0,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,0,1,0,0,0,0,1,1,1,1,1,1,1,1},
        {1,1,0,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,2} };

//Array3
char[][] mazeArray4 = {
        {4,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1},
        {1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1},
        {1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1},
        {1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1},
        {1,0,1,1,1,1,1,0,1,1,0,1,1,1,1,1,0,1},
        {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
        {1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1},
        {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
        {1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1},
        {1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1},
        {1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
        {1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1} };
        
//array5
char[][] mazeArray5 = {
        {4,1,1,1,1,1,1,1,1,1,1,1,1},
        {0,1,1,1,1,1,1,1,1,1,1,1,1},
        {0,0,0,0,0,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,0,0,0,0,0,0,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {2,0,0,0,0,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1}
};

//array6
char[][] mazeArray6 = {
        {4,0,1,1,1,1,1,1,1,1,1,1,1},
        {1,0,1,1,1,0,1,1,1,1,1,1,1},
        {1,0,1,1,1,0,1,1,1,1,1,1,1},
        {1,0,1,1,1,0,1,1,1,1,1,1,1},
        {1,0,0,0,0,0,0,0,0,0,0,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,0,0,0,0,0,0,1},
        {1,1,1,1,1,1,1,1,1,1,1,0,1},
        {1,1,1,1,1,0,0,0,0,0,0,0,1},
        {1,1,1,1,1,2,1,1,1,1,1,1,1}
} ;

//array7
char[][] mazeArray7 = {
        {4,1,1,1,1,1,1,1,1,1,1},
        {0,1,1,1,1,1,1,1,1,1,1},
        {0,0,0,0,0,0,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1},
        {1,1,1,1,1,0,0,0,0,0,1},
        {1,1,1,1,1,0,1,1,1,1,1},
        {2,0,0,0,0,0,1,1,1,1,1} };

//array8
char[][] mazeArray8 = {
        {4,0,0,0,0,0,0,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1},
        {1,1,1,1,1,0,0,0,0,0,0,1},
        {1,1,1,1,1,0,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1},
        {1,1,1,1,1,0,0,0,0,0,0,2},
        {1,1,1,1,1,1,1,1,1,1,1,1}
};
        
//array9
char[][] mazeArray9 = {
        {4,1,1,1,1,1,1,1,1,1,1,1},
        {0,1,1,1,1,1,1,1,1,1,1,1},
        {0,0,0,0,0,1,1,1,1,1,1,1},
        {1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,0,0,0,0,0,0,0,1},
        {1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,0,1,1,1,1,1,1,1},
        {2,0,0,0,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1}
};

//array9
char[][] mazeArray10 = {
        {4,0,0,0,0,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,0,0,0,0,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,1,1,1,1,1,1,1},
        {1,1,1,1,1,0,0,0,0,0,0,0,2},
        {1,1,1,1,1,1,1,1,1,1,1,1,1},
};
        
//random generator method to generate a random number and returns
//with the number
public int randomGen() throws InterruptedException {
  

    
   // System.out.println("Generating MAZE\n------------------------");
    //Spinner();
   int number = rand.nextInt(10)+1;
    return number;
    
}
    
//returnArray method to take in a number
//and returns the corresponding array
public char[][] returnArray(int x){
   
    
      if ( x == 1) {
          return mazeArray1;
      }
      else  if (x == 2) {
          return mazeArray2;
      } else if (x ==3) {
          return mazeArray3;
      } else if (x == 4) {
          return mazeArray4;
      } else if (x == 5 ) {
          return mazeArray5;
      } else if (x == 6) {
          return mazeArray6;
      } else if (x ==7) {
          return mazeArray7;
      } else if (x == 8) {
          return mazeArray8;
      } else if ( x == 9 ) {
          return mazeArray9;
      }
          else if ( x == 10) {
              return mazeArray10;
          }else
      

       return null;
      }

    //constructor
public MazeArrays() {
    
}
 
//default Constructor
    public MazeArrays(char[][] maze) {
        super();
        
    }

    //Spinner method that fakes maze is generating
public void Spinner() throws InterruptedException {
    int delay = 1000;
    int numSpins = 5;
    
    
    for (int i = 0; i < numSpins; i++);
    System.out.println("Computing....5");
    Thread.sleep(delay);
    System.out.println("Computing....4");
    Thread.sleep(delay);
    System.out.println("Computing....3");
    Thread.sleep(delay);
    System.out.println("Computing....2");
    Thread.sleep(delay);
    System.out.println("Computing....1");
    Thread.sleep(delay);
    System.out.print("MAZE GENERATION COMPLETED\n--------------------");
    System.out.println();
    
            
    
}


   




}

